apply plugin: 'com.android.model.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def superpowered_sdk_path = properties.getProperty('superpowered.dir')
def signConf // signing configuration for release build
Properties signConfProperties = new Properties()
signConfProperties.load(project.rootProject.file('gradle.properties').newDataInputStream())

model {
    android.signingConfigs {
        create("test") {
            storeFile = signConfProperties.getProperty("RELEASE_STORE_FILE")
            storePassword = signConfProperties.getProperty("RELEASE_STORE_PASSWORD")
            keyAlias = signConfProperties.getProperty("RELEASE_KEY_ALIAS")
            keyPassword = signConfProperties.getProperty("RELEASE_KEY_PASSWORD")
            storeType = "jks"
            signConf = it
        }
    }
    android.buildTypes {
        release {
            signingConfig = signConf
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            superpowered { // this is where you declare the "superpowered" static library
                headers.srcDir "${superpowered_sdk_path}"
                binaries.withType(StaticLibraryBinary) { // attaching library files to each platform
                    def platformName = targetPlatform.getName()
                    if (platformName == "armeabi-v7a") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidARM.a")
                    } else if (platformName == "arm64-v8a") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidARM64.a")
                    } else if (platformName == "x86") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidX86.a")
                    } else if (platformName == "x86_64") {
                        staticLibraryFile = file("${superpowered_sdk_path}/libSuperpoweredAndroidX86_64.a")
                    }
                }
            }
        }
    }
    android {
        compileSdkVersion 25
        buildToolsVersion "25.0.0"

        defaultConfig {
            applicationId "xyz.peast.beep"
            minSdkVersion.apiLevel 16
            targetSdkVersion.apiLevel 23

            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-rules.pro'))
            }
        }

    }
    android.ndk { // your application's native layer parameters
        moduleName = "SuperpoweredAudio"
        platformVersion = 25
        // this will not limit it to run on older devices, it's just the NDK platform to build with
        stl = "stlport_static"
        CFlags.addAll(["-O3", "-fsigned-char"]) // full optimization, char data type is signed
        cppFlags.addAll(["-fsigned-char", "-I${superpowered_sdk_path}".toString()])
        ldLibs.addAll(["log", "android", "OpenSLES"])
        // load these libraries: log, android, OpenSL ES (for audio)
        abiFilters.addAll(["armeabi-v7a", "arm64-v8a", "x86", "x86_64"])
        // these platforms cover 99% percent of all Android devices
    }
    android.sources.main.jni {
        source {
            srcDir "jni"
            srcDir "${superpowered_sdk_path}/AndroidIO"
        }
        dependencies {
            library "superpowered" linkage "static"
            // this is where you attach the "superpowered" static library to your app
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support:support-annotations:25.0.0'
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.android.support:recyclerview-v7:25.0.0'
    compile 'com.android.support:design:25.0.0'
    compile 'com.google.android.gms:play-services-ads:9.4.0'
    compile 'com.google.android.gms:play-services-analytics:9.4.0'
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile project(':androidlame')

}
